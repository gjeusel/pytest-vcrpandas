.. image:: https://travis-ci.org/gjeusel/pytest-vcrpandas.svg?branch=master
  :target: https://travis-ci.org/gjeusel/pytest-vcrpandas
.. image:: https://readthedocs.org/projects/pytest-vcrpandas/badge/?version=latest
  :target: http://pytest-vcrpandas.readthedocs.io/en/latest/?badge=latest
  :alt: Documentation Status
.. image:: https://codecov.io/gh/gjeusel/pytest-vcrpandas/branch/master/graph/badge.svg
  :target: https://codecov.io/gh/gjeusel/pytest-vcrpandas
.. image:: https://badge.fury.io/py/pytest-vcrpandas.svg
  :target: https://pypi.python.org/pypi/pytest-vcrpandas/
  :alt: Pypi package

===============================
pytest-vcrpandas
===============================

Combine `vcrpy <https://github.com/kevin1024/vcrpy>`_ with
`pandas <https://github.com/pandas-dev/pandas>`_ to not only mock your HTTP interactions,
but also tests your post-processing work to get a pandas DataFrame.

Usage
-----

.. code:: python

    # test_meteo_client.py

    def test_meteo_get_wind_speed(vcrpandas, client):
        start = pd.Timestamp('2018-01-01', tz='CET')
        end = pd.Timestamp('2018-02-01', tz='CET')
        with vcrpandas("meteo_get_wind_speed") as recorder:
            df = client.get_wind_speed(start, end)
            recorder(df)


.. code:: bash

    # call pytest for the first time to generate samples
    > pytest --vcr-record="new_episodes"

    # you can now replay it:
    > pytest


Behind the hood, 2 files are generated by the first run:

- a *meteo_get_wind_speed.yaml*, which is the reponse obtained by
  the first HTTP interaction.
- a *meteo_get_wind_speed.pickle* that serve to compare the formatting from
  the mocked response to the pandas DataFrame, types included.


Installation
------------

.. code:: bash

    pip install pytest-vcrpandas

